{"ast":null,"code":"var _jsxFileName = \"/Users/tammy/Documents/CWRU/fullstack/Tetris_FullStack/tetris/src/components/GameController.js\",\n  _s = $RefreshSig$();\nimport \"./styles/GameController.css\";\nimport { Action, actionForKey, actionIsDrop } from \"../logic/input\";\nimport { playerController } from \"../logic/PlayerController\";\nimport { useDropTime } from \"../hooks/useDropTime\";\nimport { useInterval } from \"../hooks/useInterval\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GameController = ({\n  board,\n  gameStats,\n  player,\n  setGameOver,\n  setPlayer\n}) => {\n  _s();\n  const [dropTime, pauseDropTime, resumeDropTime] = useDropTime({\n    gameStats\n  });\n  useInterval(() => {\n    handleInput({\n      action: Action.SlowDrop\n    });\n  }, dropTime);\n  const onKeyUp = ({\n    code\n  }) => {\n    const action = actionForKey(code);\n    if (actionIsDrop(action)) resumeDropTime();\n  };\n  const onKeyDown = ({\n    code\n  }) => {\n    const action = actionForKey(code);\n    if (action === Action.Pause) {\n      if (dropTime) {\n        pauseDropTime();\n      } else {\n        resumeDropTime();\n      }\n    } else if (action === Action.Quit) {\n      setGameOver(true);\n    } else {\n      if (actionIsDrop(action)) pauseDropTime();\n      if (!dropTime) {\n        return;\n      }\n      handleInput({\n        action\n      });\n    }\n  };\n  const handleInput = ({\n    action\n  }) => {\n    playerController({\n      action,\n      board,\n      player,\n      setPlayer,\n      setGameOver\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"GameController\",\n      type: \"text\",\n      onKeyDown: onKeyDown,\n      onKeyUp: onKeyUp,\n      autoFocus: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_s(GameController, \"ELe5AZSYY6SuDPBzJQOuhc+RWbI=\", false, function () {\n  return [useDropTime, useInterval];\n});\n_c = GameController;\nexport default GameController;\nvar _c;\n$RefreshReg$(_c, \"GameController\");","map":{"version":3,"names":["Action","actionForKey","actionIsDrop","playerController","useDropTime","useInterval","jsxDEV","_jsxDEV","Fragment","_Fragment","GameController","board","gameStats","player","setGameOver","setPlayer","_s","dropTime","pauseDropTime","resumeDropTime","handleInput","action","SlowDrop","onKeyUp","code","onKeyDown","Pause","Quit","children","className","type","autoFocus","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tammy/Documents/CWRU/fullstack/Tetris_FullStack/tetris/src/components/GameController.js"],"sourcesContent":["import \"./styles/GameController.css\"\nimport { Action, actionForKey, actionIsDrop } from \"../logic/input\";\nimport { playerController } from \"../logic/PlayerController\";\n\nimport { useDropTime } from \"../hooks/useDropTime\";\nimport { useInterval } from \"../hooks/useInterval\";\n\nconst GameController = ({\n  board,\n  gameStats,\n  player,\n  setGameOver,\n  setPlayer\n}) => {\n  const [dropTime, pauseDropTime, resumeDropTime] = useDropTime({\n    gameStats\n  });\n\n  useInterval(() => {\n    handleInput({ action: Action.SlowDrop });\n  }, dropTime);\n\n  const onKeyUp = ({ code }) => {\n    const action = actionForKey(code);\n    if (actionIsDrop(action)) resumeDropTime();\n  };\n\n  const onKeyDown = ({ code }) => {\n    const action = actionForKey(code);\n\n    if (action === Action.Pause) {\n      if (dropTime) {\n        pauseDropTime();\n      } else {\n        resumeDropTime();\n      }\n    } else if (action === Action.Quit) {\n      setGameOver(true);\n    } else {\n      if (actionIsDrop(action)) pauseDropTime();\n      if (!dropTime) {\n        return;\n      }\n      handleInput({ action });\n    }\n  };\n\n  const handleInput = ({ action }) => {\n    playerController({\n      action,\n      board,\n      player,\n      setPlayer,\n      setGameOver\n    });\n  };\n\n  return (\n    <>\n    <input\n      className=\"GameController\"\n      type=\"text\"\n      onKeyDown={onKeyDown}\n      onKeyUp={onKeyUp}\n      autoFocus\n    />\n    </>\n    \n  );\n};\n\nexport default GameController;\n"],"mappings":";;AAAA,OAAO,6BAA6B;AACpC,SAASA,MAAM,EAAEC,YAAY,EAAEC,YAAY,QAAQ,gBAAgB;AACnE,SAASC,gBAAgB,QAAQ,2BAA2B;AAE5D,SAASC,WAAW,QAAQ,sBAAsB;AAClD,SAASC,WAAW,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEnD,MAAMC,cAAc,GAAGA,CAAC;EACtBC,KAAK;EACLC,SAAS;EACTC,MAAM;EACNC,WAAW;EACXC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,QAAQ,EAAEC,aAAa,EAAEC,cAAc,CAAC,GAAGf,WAAW,CAAC;IAC5DQ;EACF,CAAC,CAAC;EAEFP,WAAW,CAAC,MAAM;IAChBe,WAAW,CAAC;MAAEC,MAAM,EAAErB,MAAM,CAACsB;IAAS,CAAC,CAAC;EAC1C,CAAC,EAAEL,QAAQ,CAAC;EAEZ,MAAMM,OAAO,GAAGA,CAAC;IAAEC;EAAK,CAAC,KAAK;IAC5B,MAAMH,MAAM,GAAGpB,YAAY,CAACuB,IAAI,CAAC;IACjC,IAAItB,YAAY,CAACmB,MAAM,CAAC,EAAEF,cAAc,CAAC,CAAC;EAC5C,CAAC;EAED,MAAMM,SAAS,GAAGA,CAAC;IAAED;EAAK,CAAC,KAAK;IAC9B,MAAMH,MAAM,GAAGpB,YAAY,CAACuB,IAAI,CAAC;IAEjC,IAAIH,MAAM,KAAKrB,MAAM,CAAC0B,KAAK,EAAE;MAC3B,IAAIT,QAAQ,EAAE;QACZC,aAAa,CAAC,CAAC;MACjB,CAAC,MAAM;QACLC,cAAc,CAAC,CAAC;MAClB;IACF,CAAC,MAAM,IAAIE,MAAM,KAAKrB,MAAM,CAAC2B,IAAI,EAAE;MACjCb,WAAW,CAAC,IAAI,CAAC;IACnB,CAAC,MAAM;MACL,IAAIZ,YAAY,CAACmB,MAAM,CAAC,EAAEH,aAAa,CAAC,CAAC;MACzC,IAAI,CAACD,QAAQ,EAAE;QACb;MACF;MACAG,WAAW,CAAC;QAAEC;MAAO,CAAC,CAAC;IACzB;EACF,CAAC;EAED,MAAMD,WAAW,GAAGA,CAAC;IAAEC;EAAO,CAAC,KAAK;IAClClB,gBAAgB,CAAC;MACfkB,MAAM;MACNV,KAAK;MACLE,MAAM;MACNE,SAAS;MACTD;IACF,CAAC,CAAC;EACJ,CAAC;EAED,oBACEP,OAAA,CAAAE,SAAA;IAAAmB,QAAA,eACArB,OAAA;MACEsB,SAAS,EAAC,gBAAgB;MAC1BC,IAAI,EAAC,MAAM;MACXL,SAAS,EAAEA,SAAU;MACrBF,OAAO,EAAEA,OAAQ;MACjBQ,SAAS;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV;EAAC,gBACA,CAAC;AAGP,CAAC;AAACnB,EAAA,CA9DIN,cAAc;EAAA,QAOgCN,WAAW,EAI7DC,WAAW;AAAA;AAAA+B,EAAA,GAXP1B,cAAc;AAgEpB,eAAeA,cAAc;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}