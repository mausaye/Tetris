{"ast":null,"code":"var _jsxFileName = \"/Users/tammy/Documents/CWRU/fullstack/Tetris_FullStack/tetris/src/components/GameController.js\",\n  _s = $RefreshSig$();\nimport \"./styles/GameController.css\";\nimport { Action, actionForKey, actionIsDrop } from \"../logic/input\";\nimport { playerController } from \"../logic/PlayerController\";\nimport { useDropTime } from \"../hooks/useDropTime\";\nimport { useInterval } from \"../hooks/useInterval\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameController = ({\n  board,\n  gameStats,\n  player,\n  setGameOver,\n  setPlayer\n}) => {\n  _s();\n  const [dropTime] = useDropTime({\n    gameStats\n  });\n  useInterval(() => {\n    handleInput({\n      action: Action.SlowDrop\n    });\n  }, dropTime);\n  const onKeyUp = ({\n    code\n  }) => {\n    const action = actionForKey(code);\n  };\n  const onKeyDown = ({\n    code\n  }) => {\n    const action = actionForKey(code);\n    if (action === Action.Pause) {\n      if (dropTime) {\n        pauseDropTime();\n      } else {\n        resumeDropTime();\n      }\n    } else if (action === Action.Quit) {\n      setGameOver(true);\n    } else {\n      if (actionIsDrop(action)) pauseDropTime();\n      if (!dropTime) {\n        return;\n      }\n      handleInput({\n        action\n      });\n    }\n  };\n  const handleInput = ({\n    action\n  }) => {\n    playerController({\n      action,\n      board,\n      player,\n      setPlayer,\n      setGameOver\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    className: \"GameController\",\n    type: \"text\",\n    onKeyDown: onKeyDown,\n    onKeyUp: onKeyUp,\n    autoFocus: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(GameController, \"hjoTunsJWuZq8UWBoawpMn38Kws=\", false, function () {\n  return [useDropTime, useInterval];\n});\n_c = GameController;\nexport default GameController;\nvar _c;\n$RefreshReg$(_c, \"GameController\");","map":{"version":3,"names":["Action","actionForKey","actionIsDrop","playerController","useDropTime","useInterval","jsxDEV","_jsxDEV","GameController","board","gameStats","player","setGameOver","setPlayer","_s","dropTime","handleInput","action","SlowDrop","onKeyUp","code","onKeyDown","Pause","pauseDropTime","resumeDropTime","Quit","className","type","autoFocus","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tammy/Documents/CWRU/fullstack/Tetris_FullStack/tetris/src/components/GameController.js"],"sourcesContent":["import \"./styles/GameController.css\"\nimport { Action, actionForKey, actionIsDrop } from \"../logic/input\";\nimport { playerController } from \"../logic/PlayerController\";\n\nimport { useDropTime } from \"../hooks/useDropTime\";\nimport { useInterval } from \"../hooks/useInterval\";\n\nconst GameController = ({\n  board,\n  gameStats,\n  player,\n  setGameOver,\n  setPlayer\n}) => {\n  const [dropTime] = useDropTime({\n    gameStats\n  });\n\n  useInterval(() => {\n    handleInput({ action: Action.SlowDrop });\n  }, dropTime);\n\n  const onKeyUp = ({ code }) => {\n    const action = actionForKey(code);\n  };\n\n  const onKeyDown = ({ code }) => {\n    const action = actionForKey(code);\n\n    if (action === Action.Pause) {\n      if (dropTime) {\n        pauseDropTime();\n      } else {\n        resumeDropTime();\n      }\n    } else if (action === Action.Quit) {\n      setGameOver(true);\n    } else {\n      if (actionIsDrop(action)) pauseDropTime();\n      if (!dropTime) {\n        return;\n      }\n      handleInput({ action });\n    }\n  };\n\n  const handleInput = ({ action }) => {\n    playerController({\n      action,\n      board,\n      player,\n      setPlayer,\n      setGameOver\n    });\n  };\n\n  return (\n    <input\n      className=\"GameController\"\n      type=\"text\"\n      onKeyDown={onKeyDown}\n      onKeyUp={onKeyUp}\n      autoFocus\n    />\n  );\n};\n\nexport default GameController;\n"],"mappings":";;AAAA,OAAO,6BAA6B;AACpC,SAASA,MAAM,EAAEC,YAAY,EAAEC,YAAY,QAAQ,gBAAgB;AACnE,SAASC,gBAAgB,QAAQ,2BAA2B;AAE5D,SAASC,WAAW,QAAQ,sBAAsB;AAClD,SAASC,WAAW,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,cAAc,GAAGA,CAAC;EACtBC,KAAK;EACLC,SAAS;EACTC,MAAM;EACNC,WAAW;EACXC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,QAAQ,CAAC,GAAGX,WAAW,CAAC;IAC7BM;EACF,CAAC,CAAC;EAEFL,WAAW,CAAC,MAAM;IAChBW,WAAW,CAAC;MAAEC,MAAM,EAAEjB,MAAM,CAACkB;IAAS,CAAC,CAAC;EAC1C,CAAC,EAAEH,QAAQ,CAAC;EAEZ,MAAMI,OAAO,GAAGA,CAAC;IAAEC;EAAK,CAAC,KAAK;IAC5B,MAAMH,MAAM,GAAGhB,YAAY,CAACmB,IAAI,CAAC;EACnC,CAAC;EAED,MAAMC,SAAS,GAAGA,CAAC;IAAED;EAAK,CAAC,KAAK;IAC9B,MAAMH,MAAM,GAAGhB,YAAY,CAACmB,IAAI,CAAC;IAEjC,IAAIH,MAAM,KAAKjB,MAAM,CAACsB,KAAK,EAAE;MAC3B,IAAIP,QAAQ,EAAE;QACZQ,aAAa,CAAC,CAAC;MACjB,CAAC,MAAM;QACLC,cAAc,CAAC,CAAC;MAClB;IACF,CAAC,MAAM,IAAIP,MAAM,KAAKjB,MAAM,CAACyB,IAAI,EAAE;MACjCb,WAAW,CAAC,IAAI,CAAC;IACnB,CAAC,MAAM;MACL,IAAIV,YAAY,CAACe,MAAM,CAAC,EAAEM,aAAa,CAAC,CAAC;MACzC,IAAI,CAACR,QAAQ,EAAE;QACb;MACF;MACAC,WAAW,CAAC;QAAEC;MAAO,CAAC,CAAC;IACzB;EACF,CAAC;EAED,MAAMD,WAAW,GAAGA,CAAC;IAAEC;EAAO,CAAC,KAAK;IAClCd,gBAAgB,CAAC;MACfc,MAAM;MACNR,KAAK;MACLE,MAAM;MACNE,SAAS;MACTD;IACF,CAAC,CAAC;EACJ,CAAC;EAED,oBACEL,OAAA;IACEmB,SAAS,EAAC,gBAAgB;IAC1BC,IAAI,EAAC,MAAM;IACXN,SAAS,EAAEA,SAAU;IACrBF,OAAO,EAAEA,OAAQ;IACjBS,SAAS;EAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEN,CAAC;AAAClB,EAAA,CA1DIN,cAAc;EAAA,QAOCJ,WAAW,EAI9BC,WAAW;AAAA;AAAA4B,EAAA,GAXPzB,cAAc;AA4DpB,eAAeA,cAAc;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}